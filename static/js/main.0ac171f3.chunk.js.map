{"version":3,"sources":["Components/List/List.jsx","App.js","index.js"],"names":["List","state","start","step","toNext","max","words","length","setState","toPrev","min","this","buttons","Array","Math","ceil","map","item","i","className","value","onChange","event","target","_","key","slice","word","type","onClick","disabled","button","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"qvBAKaA,G,MAAb,4MACEC,MAAQ,CACNC,MAAO,EACPC,KAAM,GAHV,EAMEC,OAAS,WAAO,IAAD,EACW,EAAKH,MACzBI,EAFS,EACLH,MADK,EACEC,KAGXE,GAAOC,EAAMC,SACfF,EAAMC,EAAMC,OAAS,GAGvB,EAAKC,SAAS,CAAEN,MAAOG,KAd3B,EAiBEI,OAAS,WAAO,IAAD,EACW,EAAKR,MACzBS,EAFS,EACLR,MADK,EACEC,KAGXO,EAAM,IACRA,EAAM,GAGR,EAAKF,SAAS,CAAEN,MAAOQ,KAzB3B,uDA4BY,IAAD,SACiBC,KAAKV,MAArBC,EADD,EACCA,MAAOC,EADR,EACQA,KAETS,EAAU,YAAIC,MAAMC,KAAKC,KAAKT,EAAMC,OAASJ,KAChDa,KAAI,SAACC,EAAMC,GAAP,OAAaA,EAAI,KAExB,OACE,yBACEC,UAAU,cAEV,4BACEC,MAAOjB,EACPkB,SAAU,SAAAC,GAAK,OAAI,EAAKd,SAAS,CAAEL,MAAOmB,EAAMC,OAAOH,SACvDD,UAAU,sBAET,YAAIN,MAAM,KAAKG,KAAI,SAACQ,EAAGN,GACtB,IAAMD,EAAOC,EAEb,OACE,4BAAQO,IAAKR,GAAQC,EAAI,OAI/B,yBACEC,UAAU,oBAETb,EAAMoB,MAAMxB,EAAOA,EAAQC,GACzBa,KAAI,SAACW,EAAMT,GAAP,OACH,uBACEC,UAAU,mBACVM,IAAKE,GAEL,0BACER,UAAU,sBAETjB,EAAQgB,EAAI,GAEf,0BACEC,UAAU,oBAETQ,QAMX,yBACER,UAAU,uBAEV,4BACES,KAAK,SACLC,QAASlB,KAAKF,OACdU,UAAU,qBACVW,SAAoB,IAAV5B,IAAe,GAJ3B,QASCU,EAAQI,KAAI,SAACe,EAAQb,GAAT,OACX,4BACEC,UAAS,WAAOY,EAAS,GAAK5B,IAASD,IAC/B6B,EAAS,GAAK5B,IAASD,EAAQC,IAC7B4B,EAAS,GAAK5B,IAASD,EAAQC,GACpB,IAAX4B,GACCA,IAAWnB,EAAQL,OAC1B,qBACA,2BANK,8BAOHwB,EAAS,GAAK5B,IAASD,GACtB,8BACPuB,IAAKM,EACLH,KAAK,SACLC,QAAS,WACP,EAAKrB,SAAS,CAAEN,MAAOC,GAAQ4B,EAAS,QAGvCA,EAAS,GAAK5B,IAASD,IACpB6B,EAAS,GAAK5B,IAASD,EAAQC,IAC7B4B,EAAS,GAAK5B,IAASD,EAAQC,GACpB,IAAX4B,GACCA,IAAWnB,EAAQL,OAAUwB,EAAS,QAInD,4BACEZ,UAAU,qBACVS,KAAK,SACLC,QAASlB,KAAKP,OACd0B,SAAU5B,GAASI,EAAMC,OAASJ,IAAQ,GAJ5C,cA/GV,GAA0B6B,IAAMC,YCOjBC,EAPH,kBACV,oCACE,wBAAIf,UAAU,WAAd,cACA,kBAAC,EAAD,QCJJgB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.0ac171f3.chunk.js","sourcesContent":["import React from 'react';\nimport words from '../../list/list.json';\n\nimport './List.css';\n\nexport class List extends React.Component {\n  state = {\n    start: 0,\n    step: 5,\n  }\n\n  toNext = () => {\n    const { start, step } = this.state;\n    let max = start + step;\n\n    if (max >= words.length) {\n      max = words.length - 1;\n    }\n\n    this.setState({ start: max });\n  }\n\n  toPrev = () => {\n    const { start, step } = this.state;\n    let min = start - step;\n\n    if (min < 0) {\n      min = 0;\n    }\n\n    this.setState({ start: min });\n  }\n\n  render() {\n    const { start, step } = this.state;\n\n    const buttons = [...Array(Math.ceil(words.length / step))]\n      .map((item, i) => i + 1);\n\n    return (\n      <div\n        className=\"pagination\"\n      >\n        <select\n          value={step}\n          onChange={event => this.setState({ step: +event.target.value })}\n          className=\"pagination__select\"\n        >\n          {[...Array(10)].map((_, i) => {\n            const item = i;\n\n            return (\n              <option key={item}>{ i + 1 }</option>\n            );\n          })}\n        </select>\n        <div\n          className=\"pagination__list\"\n        >\n          {words.slice(start, start + step)\n            .map((word, i) => (\n              <p\n                className=\"pagination__item\"\n                key={word}\n              >\n                <span\n                  className=\"pagination__number\"\n                >\n                  {start + i + 1}\n                </span>\n                <span\n                  className=\"pagination__word\"\n                >\n                  {word}\n                </span>\n              </p>\n            ))}\n        </div>\n\n        <div\n          className=\"pagination__buttons\"\n        >\n          <button\n            type=\"button\"\n            onClick={this.toPrev}\n            className=\"pagination__button\"\n            disabled={start === 0 && true}\n          >\n            Prev\n          </button>\n\n          {buttons.map((button, i) => (\n            <button\n              className={`${((button - 1) * step === start\n                  || (button - 1) * step === start + step\n                    || (button - 1) * step === start - step\n                     || button === 1\n                      || button === buttons.length)\n                ? 'pagination__button'\n                : 'pagination__button--none'}\n                ${((button - 1) * step === start)\n                  && 'pagination__button--active'}`}\n              key={button}\n              type=\"button\"\n              onClick={() => {\n                this.setState({ start: step * (button - 1) });\n              }}\n            >\n              {((button - 1) * step === start\n                || (button - 1) * step === start + step\n                  || (button - 1) * step === start - step\n                   || button === 1\n                    || button === buttons.length) ? button : '.'}\n            </button>\n          ))}\n\n          <button\n            className=\"pagination__button\"\n            type=\"button\"\n            onClick={this.toNext}\n            disabled={start >= words.length - step && true}\n          >\n            Next\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.css';\n\nimport { List } from './Components/List';\n\nconst App = () => (\n  <>\n    <h1 className=\"heading\">Pagination</h1>\n    <List />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}